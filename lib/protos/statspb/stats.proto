syntax = "proto3";
package com.statskeeper.v1;

option go_package = ".;statspb";

import "google/protobuf/timestamp.proto";

// StatisticEntity is the core of the stats-keeper. It has a component
// that holds the actual value that user keeps track of.
//
// For example, "the number of cigarettes per day" can be a StatisticEntity,
// while the actual count of it is stored in ComponentCounter.
message StatisticEntity {
  // The unique identifier of the entity that is generated by the server.
  string id = 1;
  // The mutable name of the entity
  string name = 2;
  // The unique id of the user that owns this entity
  string user_id = 3;
  // component is the actual value of the entity. It's number starts from 100
  // because other fields can be added to StatisticEntity and still components
  // should semantically be the last one.
  oneof component {
    ComponentCounter counter = 100;
    ComponentDate date = 101;
  }
}

// ComponentType is an enumeration that represents each component type.
enum ComponentType {
  NONE = 0;
  COUNTER = 1;
  DATE = 2;
}

// ComponentCounter is for statistics where user can only increment. For
// instance, the number of times the user went to the gym.
//
// ComponentCounter is a singular component where each StatisticEntity can have
// at most one.
message ComponentCounter { uint32 count = 1; }

// ComponentDate is for statistics where the value is a date. For instance, the
// dates when the dog went to the vet.
message ComponentDate { repeated google.protobuf.Timestamp timestamps = 1; }
